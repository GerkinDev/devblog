<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Networking on GerkinDev Devblog</title>
    <link>https://gerkindev.github.io/devblog/tags/networking/</link>
    <description>Recent content in Networking on GerkinDev Devblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Â©2022, All Rights Reserved</copyright>
    <lastBuildDate>Mon, 16 Nov 2020 02:35:47 +0100</lastBuildDate>
    
        <atom:link href="https://gerkindev.github.io/devblog/tags/networking/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Setup the cluster&#39;s VPN</title>
        <link>https://gerkindev.github.io/devblog/walkthroughs/kubernetes/00-vpn/</link>
        <pubDate>Mon, 16 Nov 2020 02:35:47 +0100</pubDate>
        
        <atom:modified>Tue, 16 Feb 2021 12:06:38 +0100</atom:modified>
        <guid>https://gerkindev.github.io/devblog/walkthroughs/kubernetes/00-vpn/</guid>
        <description>References    &amp;nbsp;How To Run OpenVPN in a Docker Container on Ubuntu 14.04  &amp;nbsp;Running Docker Containers with Systemd    Because we are installing our cluster bare metal on servers exposed on the Internet, we&amp;rsquo;ll need a way to secure all of our network traffic around the critical parts of kubernetes. To do so, we&amp;rsquo;ll use OpenVPN to create a virtual secured network where all of our nodes will work.</description>
        
        <dc:creator>GerkinDev</dc:creator>
        
        
        
        
          
            
              <category>Kubernetes</category>
            
          
            
              <category>Sysadmin</category>
            
          
            
              <category>DevOps</category>
            
          
            
              <category>Networking</category>
            
          
        
        
          
            
              <category>Kubernetes</category>
            
          
        
        
      </item>
      
      <item>
        <title>Setup the cluster&#39;s internal router</title>
        <link>https://gerkindev.github.io/devblog/walkthroughs/kubernetes/03-router/</link>
        <pubDate>Mon, 16 Nov 2020 02:35:47 +0100</pubDate>
        
        <atom:modified>Tue, 16 Feb 2021 12:06:38 +0100</atom:modified>
        <guid>https://gerkindev.github.io/devblog/walkthroughs/kubernetes/03-router/</guid>
        <description>References    &amp;nbsp;https://github.com/traefik/traefik-helm-chart/pull/157/files    Start by creating traefik required resources. You can directly use resources from the &amp;nbsp;kubernetes/traefik templates: it does not contain variables. Those are taken from &amp;nbsp;traefik docs mixed up with &amp;nbsp;this PR for kubernetes 1.19 support and schemas.
 Please look forward for &amp;nbsp;this issue in traefik about official v1.19 support.
 Namespace Definitions Rbac IngressController Services  1 2 3 4 5  # File: .</description>
        
        <dc:creator>GerkinDev</dc:creator>
        
        
        
        
          
            
              <category>Kubernetes</category>
            
          
            
              <category>Sysadmin</category>
            
          
            
              <category>DevOps</category>
            
          
            
              <category>Networking</category>
            
          
            
              <category>Web service</category>
            
          
        
        
          
            
              <category>Kubernetes</category>
            
          
        
        
      </item>
      
      <item>
        <title>Make services reachable from the world</title>
        <link>https://gerkindev.github.io/devblog/walkthroughs/kubernetes/04-reverse-proxy/</link>
        <pubDate>Mon, 16 Nov 2020 02:35:47 +0100</pubDate>
        
        <atom:modified>Tue, 16 Feb 2021 12:06:38 +0100</atom:modified>
        <guid>https://gerkindev.github.io/devblog/walkthroughs/kubernetes/04-reverse-proxy/</guid>
        <description>Now that you have a router installed, you have to pass requests on your server to it. This setup use a single entry point directly binding some ports on the host server.
1. Make a static and previsible configuration As you may have noticed in the step  &amp;nbsp;Kickstart the cluster, the metallb configuration use only dynamic adresses. But for the reverse proxy to work, we&amp;rsquo;ll need to be sure that our traefik router has a constant IP in your VPN.</description>
        
        <dc:creator>GerkinDev</dc:creator>
        
        
        
        
          
            
              <category>Kubernetes</category>
            
          
            
              <category>Sysadmin</category>
            
          
            
              <category>DevOps</category>
            
          
            
              <category>Networking</category>
            
          
            
              <category>Web service</category>
            
          
        
        
          
            
              <category>Kubernetes</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
